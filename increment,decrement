state:is an essential part in react because it allows components to be dynamic ,interactive and capable of responding to userinput r change over time
1)usestatehook:
usestate:allows you to add state to functional components

syntax:
const[state ,setState]=useState(initial value)
state:This is current state
setState-This is a function to update the state
initial value :The value you want set as the initial value

increment,decrement:
App.js
import React, { useState } from "react";
const Counter = () => {
    const[count, setCount] = useState(0);
  //current state =count
  //function to update state=setcount
  //use state()to initialize the state=0;
  
    return (
        <div>
           
           <h2>Counter value: <b>{count}</b></h2>
            <button onClick={() => setCount(count+1)}>Increment</button>
            <button onClick={() => setCount(count-1)}>Decrement</button>
        </div>
    );
};

export default Counter;

import React, { useState } from "react";

//counter component

const ThemeToggler=()=>{
  const [theme,setTheme] = useState('light')

  const toggleTheme = () =>{
    setTheme(prevTheme=>(prevTheme == 'light' ? 'dark' : 'light'))
  }

  return(
    <div style={{backgroundColor:theme=='light'?'white':'black' , color:theme=='light'? 'black':'white' ,textAlign:'center'}}>
      <h1>The Current theme is {theme}</h1>
      <button onClick={toggleTheme}>toggleTheme</button>
    </div>
  )

}
export default ThemeToggler;
